import { useRef, useState } from 'react';
import './App.css'
import { Layer, Stage, Text, Rect, Circle, Image } from 'react-konva'
import Konva from 'konva';
import useImage from 'use-image';

const URLImage = ({ src, ...rest }) => {
  const [image] = useImage(src, 'anonymous');
  return <Image image={image} {...rest} />;
};

function App() {

    const width = window.innerWidth;
  const height = window.innerHeight;
  
  const stageRef = useRef<Konva.Stage>(null);

  const handleWheel = (e: WheelEvent) => {
    e.preventDefault();

    const stage = stageRef.current;
    if (stage === null) return
    const oldScale = stage.getX
    const pointer = stage.getPointerPosition();

    const mousePointTo = {
      x: (pointer.x - stage.x()) / oldScale,
      y: (pointer.y - stage.y()) / oldScale,
    };

    // how to scale? Zoom in? Or zoom out?
    let direction = e.evt.deltaY > 0 ? 1 : -1;

    // when we zoom on trackpad, e.evt.ctrlKey is true
    // in that case lets revert direction
    if (e.evt.ctrlKey) {
      direction = -direction;
    }

    const scaleBy = 1.01;
    const newScale = direction > 0 ? oldScale * scaleBy : oldScale / scaleBy;

    stage.scale({ x: newScale, y: newScale });

    const newPos = {
      x: pointer.x - mousePointTo.x * newScale,
      y: pointer.y - mousePointTo.y * newScale,
    };
    stage.position(newPos);
  };

  return (
      <Stage
      width={width}
      height={height}
      ref={stageRef}
      onWheel={handleWheel}
    >
      <Layer>
         <URLImage src="https://i0.wp.com/blog.worldanvil.com/wp-content/uploads/2020/02/Kingsreach-Blue.jpg?resize=1024%2C768&ssl=1" x={0} y={5} />
      </Layer>
    </Stage>
  )
}

export default App
